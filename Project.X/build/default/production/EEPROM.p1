Version 4.0 HI-TECH Software Intermediate Code
"32 ./main.h
[; ;./main.h: 32: struct Limits {
[s S98 `i 1 `i 1 `i 1 `i 1 ]
[n S98 Limits lowLimit low high highLimit ]
"115 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\eeprom_routines.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[v _eeprom_read `(uc ~T0 @X0 0 ef1`uc ]
"114
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[v _eeprom_write `(v ~T0 @X0 0 ef2`uc`uc ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"2 ./main.h
[; ;./main.h: 2: __asm("GLOBAL nosup@@$_$_" "CONFIG" "\nnosup@@$_$_" "CONFIG" " SET 0");
[; <" GLOBAL nosup@@$_$_CONFIG ;# ">
[; <" nosup@@$_$_CONFIG SET 0 ;# ">
"17 EEPROM.c
[; ;EEPROM.c: 17: struct Limits EEPROM_limitsRead (_Bool day){
[v _EEPROM_limitsRead `(S98 ~T0 @X0 1 ef1`a ]
{
[e :U _EEPROM_limitsRead ]
[v _day `a ~T0 @X0 1 r1 ]
[f ]
"18
[; ;EEPROM.c: 18:     int addressStart;
[v _addressStart `i ~T0 @X0 1 a ]
"21
[; ;EEPROM.c: 21:     if (day) addressStart = 0;
[e $ ! != -> _day `i -> 0 `i 100  ]
[e = _addressStart -> 0 `i ]
[e $U 101  ]
"22
[; ;EEPROM.c: 22:     else addressStart = 4;
[e :U 100 ]
[e = _addressStart -> 4 `i ]
[e :U 101 ]
"25
[; ;EEPROM.c: 25:     int lowLimit, low, high, highLimit;
[v _lowLimit `i ~T0 @X0 1 a ]
[v _low `i ~T0 @X0 1 a ]
[v _high `i ~T0 @X0 1 a ]
[v _highLimit `i ~T0 @X0 1 a ]
"26
[; ;EEPROM.c: 26:     lowLimit = (int)eeprom_read(addressStart);
[e = _lowLimit -> ( _eeprom_read (1 -> _addressStart `uc `i ]
"27
[; ;EEPROM.c: 27:     low = (int)eeprom_read(addressStart+1);
[e = _low -> ( _eeprom_read (1 -> + _addressStart -> 1 `i `uc `i ]
"28
[; ;EEPROM.c: 28:     high = (int)eeprom_read(addressStart+2);
[e = _high -> ( _eeprom_read (1 -> + _addressStart -> 2 `i `uc `i ]
"29
[; ;EEPROM.c: 29:     highLimit = (int)eeprom_read(addressStart+3);
[e = _highLimit -> ( _eeprom_read (1 -> + _addressStart -> 3 `i `uc `i ]
[v F940 `S98 ~T0 @X0 1 s ]
[i F940
:U ..
:U ..
"32
[; ;EEPROM.c: 32:     struct Limits dayLimit = {lowLimit, low, high, highLimit};
-> 0 `i
-> 0 `i
-> 0 `i
-> 0 `i
..
..
]
[v _dayLimit `S98 ~T0 @X0 1 a ]
[e = _dayLimit F940 ]
[e ; = . _dayLimit 0 _lowLimit ; = . _dayLimit 1 _low ; = . _dayLimit 2 _high = . _dayLimit 3 _highLimit ]
"33
[; ;EEPROM.c: 33:     return dayLimit;
[e ) _dayLimit ]
[e $UE 99  ]
"34
[; ;EEPROM.c: 34: }
[e :UE 99 ]
}
"36
[; ;EEPROM.c: 36: void EEPROM_limitsWrite (struct Limits limits, _Bool day){
[v _EEPROM_limitsWrite `(v ~T0 @X0 1 ef2`S98`a ]
{
[e :U _EEPROM_limitsWrite ]
[v _limits `S98 ~T0 @X0 1 r1 ]
[v _day `a ~T0 @X0 1 r2 ]
[f ]
"37
[; ;EEPROM.c: 37:     int addressStart;
[v _addressStart `i ~T0 @X0 1 a ]
"40
[; ;EEPROM.c: 40:     if (day) addressStart = 0;
[e $ ! != -> _day `i -> 0 `i 103  ]
[e = _addressStart -> 0 `i ]
[e $U 104  ]
"41
[; ;EEPROM.c: 41:     else addressStart = 4;
[e :U 103 ]
[e = _addressStart -> 4 `i ]
[e :U 104 ]
"44
[; ;EEPROM.c: 44:     eeprom_write(addressStart,limits.lowLimit);
[e ( _eeprom_write (2 , -> _addressStart `uc -> . _limits 0 `uc ]
"45
[; ;EEPROM.c: 45:     eeprom_write(addressStart + 1,limits.low);
[e ( _eeprom_write (2 , -> + _addressStart -> 1 `i `uc -> . _limits 1 `uc ]
"46
[; ;EEPROM.c: 46:     eeprom_write(addressStart + 2,limits.high);
[e ( _eeprom_write (2 , -> + _addressStart -> 2 `i `uc -> . _limits 2 `uc ]
"47
[; ;EEPROM.c: 47:     eeprom_write(addressStart + 3,limits.highLimit);
[e ( _eeprom_write (2 , -> + _addressStart -> 3 `i `uc -> . _limits 3 `uc ]
"48
[; ;EEPROM.c: 48: }
[e :UE 102 ]
}
"50
[; ;EEPROM.c: 50: _Bool EEPROM_isEmpty(void) {
[v _EEPROM_isEmpty `(a ~T0 @X0 1 ef ]
{
[e :U _EEPROM_isEmpty ]
[f ]
"51
[; ;EEPROM.c: 51:     _Bool empty = 0;
[v _empty `a ~T0 @X0 1 a ]
[e = _empty -> -> 0 `i `a ]
"54
[; ;EEPROM.c: 54:     int test1 = (int)eeprom_read(0);
[v _test1 `i ~T0 @X0 1 a ]
[e = _test1 -> ( _eeprom_read (1 -> -> 0 `i `uc `i ]
"55
[; ;EEPROM.c: 55:     int test2 = (int)eeprom_read(1);
[v _test2 `i ~T0 @X0 1 a ]
[e = _test2 -> ( _eeprom_read (1 -> -> 1 `i `uc `i ]
"56
[; ;EEPROM.c: 56:     int test3 = (int)eeprom_read(2);
[v _test3 `i ~T0 @X0 1 a ]
[e = _test3 -> ( _eeprom_read (1 -> -> 2 `i `uc `i ]
"57
[; ;EEPROM.c: 57:     int test4 = (int)eeprom_read(3);
[v _test4 `i ~T0 @X0 1 a ]
[e = _test4 -> ( _eeprom_read (1 -> -> 3 `i `uc `i ]
"60
[; ;EEPROM.c: 60:     if (test1 == 255 && test2 == 255 && test3 == 255 && test4 == 255 ) empty = 1;
[e $ ! && && && == _test1 -> 255 `i == _test2 -> 255 `i == _test3 -> 255 `i == _test4 -> 255 `i 106  ]
[e = _empty -> -> 1 `i `a ]
[e :U 106 ]
"62
[; ;EEPROM.c: 62:     return empty;
[e ) _empty ]
[e $UE 105  ]
"63
[; ;EEPROM.c: 63: }
[e :UE 105 ]
}
