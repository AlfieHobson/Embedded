

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Oct 25 16:36:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0008                     _PORTD	set	8
   169  002B                     _RA3	set	43
   170  002A                     _RA2	set	42
   171  0029                     _RA1	set	41
   172  0088                     _TRISD	set	136
   173  0085                     _TRISA	set	133
   174  009F                     _ADCON1	set	159
   175                           
   176                           ; #config settings
   177  0000                     
   178                           	psect	cinit
   179  07FC                     start_initialization:	
   180  07FC                     __initialization:	
   181  07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184  07FC                     __end_of__initialization:	
   185  07FC  0183               	clrf	3
   186  07FD  120A  118A  2FAF   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189  0070                     __pcstackCOMMON:	
   190  0070                     ?_writecmd:	
   191  0070                     ?_delay:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ??_delay:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0070                     ?_init:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0070                     ??_init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_lcd_init:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0070                     ?_writechar:	
   207                           ; 1 bytes @ 0x0
   208                           
   209  0070                     ?_main:	
   210                           ; 1 bytes @ 0x0
   211                           
   212  0070                     delay@i:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 2 bytes @ 0x0
   217  0070                     	ds	2
   218  0072                     ??_writecmd:	
   219  0072                     ??_writechar:	
   220                           ; 1 bytes @ 0x2
   221                           
   222  0072                     writechar@x:	
   223                           ; 1 bytes @ 0x2
   224                           
   225  0072                     writecmd@x:	
   226                           ; 1 bytes @ 0x2
   227                           
   228                           
   229                           ; 1 bytes @ 0x2
   230  0072                     	ds	1
   231  0073                     ??_lcd_init:	
   232  0073                     ??_main:	
   233                           ; 1 bytes @ 0x3
   234                           
   235                           
   236                           	psect	maintext
   237  07AF                     __pmaintext:	
   238                           ; 1 bytes @ 0x3
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 71 in file "newmain.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels required when called:    3
   264 ;; This function calls:
   265 ;;		_init
   266 ;;		_lcd_init
   267 ;;		_writechar
   268 ;;		_writecmd
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           
   275                           ;psect for function _main
   276  07AF                     _main:	
   277                           
   278                           ;newmain.c: 74:         writecmd(0xC0);
   279                           
   280                           ;incstack = 0
   281                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   282  07AF  120A  118A  2765  120A  118A  	fcall	_init
   283                           
   284                           ;newmain.c: 75:         writechar('w');
   285  07B4  120A  118A  278A  120A  118A  	fcall	_lcd_init
   286                           
   287                           ;newmain.c: 76:         writechar('o');
   288  07B9  3068               	movlw	104
   289  07BA  120A  118A  277B  120A  118A  	fcall	_writechar
   290                           
   291                           ;newmain.c: 77:         writechar('r');
   292  07BF  3065               	movlw	101
   293  07C0  120A  118A  277B  120A  118A  	fcall	_writechar
   294                           
   295                           ;newmain.c: 78:         writechar('l');
   296  07C5  306C               	movlw	108
   297  07C6  120A  118A  277B  120A  118A  	fcall	_writechar
   298                           
   299                           ;newmain.c: 79:         writechar('d');
   300  07CB  306C               	movlw	108
   301  07CC  120A  118A  277B  120A  118A  	fcall	_writechar
   302                           
   303                           ;newmain.c: 80: 
   304  07D1  306F               	movlw	111
   305  07D2  120A  118A  277B  120A  118A  	fcall	_writechar
   306  07D7  30C0               	movlw	192
   307  07D8  120A  118A  276C  120A  118A  	fcall	_writecmd
   308  07DD  3077               	movlw	119
   309  07DE  120A  118A  277B  120A  118A  	fcall	_writechar
   310  07E3  306F               	movlw	111
   311  07E4  120A  118A  277B  120A  118A  	fcall	_writechar
   312  07E9  3072               	movlw	114
   313  07EA  120A  118A  277B  120A  118A  	fcall	_writechar
   314  07EF  306C               	movlw	108
   315  07F0  120A  118A  277B  120A  118A  	fcall	_writechar
   316  07F5  3064               	movlw	100
   317  07F6  120A  118A  277B  120A  118A  	fcall	_writechar
   318  07FB                     l40:	
   319  07FB  2FFB               	goto	l40
   320  07FC                     __end_of_main:	
   321                           
   322                           	psect	text1
   323  077B                     __ptext1:	
   324 ;; *************** function _writechar *****************
   325 ;; Defined at:
   326 ;;		line 39 in file "newmain.c"
   327 ;; Parameters:    Size  Location     Type
   328 ;;  x               1    wreg     unsigned char 
   329 ;; Auto vars:     Size  Location     Type
   330 ;;  x               1    2[COMMON] unsigned char 
   331 ;; Return value:  Size  Location     Type
   332 ;;                  1    wreg      void 
   333 ;; Registers used:
   334 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   340 ;;      Params:         0       0       0       0       0
   341 ;;      Locals:         1       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0
   343 ;;      Totals:         1       0       0       0       0
   344 ;;Total ram usage:        1 bytes
   345 ;; Hardware stack levels used:    1
   346 ;; Hardware stack levels required when called:    1
   347 ;; This function calls:
   348 ;;		_delay
   349 ;; This function is called by:
   350 ;;		_main
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           
   355                           ;psect for function _writechar
   356  077B                     _writechar:	
   357                           
   358                           ;incstack = 0
   359                           ; Regs used in _writechar: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   360                           ;writechar@x stored from wreg
   361  077B  00F2               	movwf	writechar@x
   362                           
   363                           ;newmain.c: 39: ;newmain.c: 40: ;newmain.c: 41: 
   364  077C  1283               	bcf	3,5	;RP0=0, select bank0
   365  077D  1303               	bcf	3,6	;RP1=0, select bank0
   366  077E  1485               	bsf	5,1	;volatile
   367                           
   368                           ;newmain.c: 42: void writecmd(char x)
   369  077F  1105               	bcf	5,2	;volatile
   370                           
   371                           ;newmain.c: 43: {
   372  0780  0872               	movf	writechar@x,w
   373  0781  0088               	movwf	8	;volatile
   374                           
   375                           ;newmain.c: 44:      RA1=0;
   376  0782  1185               	bcf	5,3	;volatile
   377                           
   378                           ;newmain.c: 45:      RA2=0;
   379  0783  120A  118A  279B   	fcall	_delay
   380                           
   381                           ;newmain.c: 46:      PORTD=x;
   382  0786  1283               	bcf	3,5	;RP0=0, select bank0
   383  0787  1303               	bcf	3,6	;RP1=0, select bank0
   384  0788  1585               	bsf	5,3	;volatile
   385  0789  0008               	return
   386  078A                     __end_of_writechar:	
   387                           
   388                           	psect	text2
   389  078A                     __ptext2:	
   390 ;; *************** function _lcd_init *****************
   391 ;; Defined at:
   392 ;;		line 29 in file "newmain.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; Hardware stack levels required when called:    2
   413 ;; This function calls:
   414 ;;		_writecmd
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           
   421                           ;psect for function _lcd_init
   422  078A                     _lcd_init:	
   423                           
   424                           ;newmain.c: 31: {
   425                           
   426                           ;incstack = 0
   427                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   428  078A  300E               	movlw	14
   429  078B  120A  118A  276C  120A  118A  	fcall	_writecmd
   430                           
   431                           ;newmain.c: 32:     RA1=1;
   432  0790  3001               	movlw	1
   433  0791  120A  118A  276C  120A  118A  	fcall	_writecmd
   434                           
   435                           ;newmain.c: 33:     RA2=0;
   436  0796  3038               	movlw	56
   437  0797  120A  118A  276C   	fcall	_writecmd
   438  079A  0008               	return
   439  079B                     __end_of_lcd_init:	
   440                           
   441                           	psect	text3
   442  076C                     __ptext3:	
   443 ;; *************** function _writecmd *****************
   444 ;; Defined at:
   445 ;;		line 51 in file "newmain.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;  x               1    wreg     unsigned char 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  x               1    2[COMMON] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   459 ;;      Params:         0       0       0       0       0
   460 ;;      Locals:         1       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0
   462 ;;      Totals:         1       0       0       0       0
   463 ;;Total ram usage:        1 bytes
   464 ;; Hardware stack levels used:    1
   465 ;; Hardware stack levels required when called:    1
   466 ;; This function calls:
   467 ;;		_delay
   468 ;; This function is called by:
   469 ;;		_lcd_init
   470 ;;		_main
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _writecmd
   476  076C                     _writecmd:	
   477                           
   478                           ;incstack = 0
   479                           ; Regs used in _writecmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   480                           ;writecmd@x stored from wreg
   481  076C  00F2               	movwf	writecmd@x
   482                           
   483                           ;newmain.c: 51: ;newmain.c: 52: ;newmain.c: 53: 
   484  076D  1283               	bcf	3,5	;RP0=0, select bank0
   485  076E  1303               	bcf	3,6	;RP1=0, select bank0
   486  076F  1085               	bcf	5,1	;volatile
   487                           
   488                           ;newmain.c: 54: void delay()
   489  0770  1105               	bcf	5,2	;volatile
   490                           
   491                           ;newmain.c: 55: {
   492  0771  0872               	movf	writecmd@x,w
   493  0772  0088               	movwf	8	;volatile
   494                           
   495                           ;newmain.c: 56:     int i;
   496  0773  1185               	bcf	5,3	;volatile
   497                           
   498                           ;newmain.c: 57:     for(i=0;i<5000;i++);
   499  0774  120A  118A  279B   	fcall	_delay
   500                           
   501                           ;newmain.c: 58: }
   502  0777  1283               	bcf	3,5	;RP0=0, select bank0
   503  0778  1303               	bcf	3,6	;RP1=0, select bank0
   504  0779  1585               	bsf	5,3	;volatile
   505  077A  0008               	return
   506  077B                     __end_of_writecmd:	
   507                           
   508                           	psect	text4
   509  079B                     __ptext4:	
   510 ;; *************** function _delay *****************
   511 ;; Defined at:
   512 ;;		line 63 in file "newmain.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  i               2    0[COMMON] int 
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, btemp+1
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         2       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0
   529 ;;      Totals:         2       0       0       0       0
   530 ;;Total ram usage:        2 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_writechar
   536 ;;		_writecmd
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           
   541                           ;psect for function _delay
   542  079B                     _delay:	
   543                           
   544                           ;newmain.c: 65:         init();;newmain.c: 66:         lcd_init();
   545                           
   546                           ;incstack = 0
   547                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   548  079B  01F0               	clrf	delay@i
   549  079C  01F1               	clrf	delay@i+1
   550  079D                     l641:	
   551  079D  3001               	movlw	1
   552  079E  07F0               	addwf	delay@i,f
   553  079F  1803               	skipnc
   554  07A0  0AF1               	incf	delay@i+1,f
   555  07A1  3000               	movlw	0
   556  07A2  07F1               	addwf	delay@i+1,f
   557  07A3  0871               	movf	delay@i+1,w
   558  07A4  3A80               	xorlw	128
   559  07A5  00FF               	movwf	127
   560  07A6  3093               	movlw	147
   561  07A7  027F               	subwf	127,w
   562  07A8  1D03               	skipz
   563  07A9  2FAC               	goto	u15
   564  07AA  3088               	movlw	136
   565  07AB  0270               	subwf	delay@i,w
   566  07AC                     u15:	
   567  07AC  1803               	btfsc	3,0
   568  07AD  0008               	return
   569  07AE  2F9D               	goto	l641
   570  07AF                     __end_of_delay:	
   571                           
   572                           	psect	text5
   573  0765                     __ptext5:	
   574 ;; *************** function _init *****************
   575 ;; Defined at:
   576 ;;		line 21 in file "newmain.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           
   604                           ;psect for function _init
   605  0765                     _init:	
   606                           
   607                           ;newmain.c: 23:     writecmd(0x1);
   608                           
   609                           ;incstack = 0
   610                           ; Regs used in _init: [wreg+status,2]
   611  0765  3007               	movlw	7
   612  0766  1683               	bsf	3,5	;RP0=1, select bank1
   613  0767  1303               	bcf	3,6	;RP1=0, select bank1
   614  0768  009F               	movwf	31	;volatile
   615                           
   616                           ;newmain.c: 24:     writecmd(0x38);
   617  0769  0185               	clrf	5	;volatile
   618                           
   619                           ;newmain.c: 25: 
   620  076A  0188               	clrf	8	;volatile
   621  076B  0008               	return
   622  076C                     __end_of_init:	
   623  007E                     btemp	set	126	;btemp
   624  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_writechar
    _main->_writecmd
    _writechar->_delay
    _lcd_init->_writecmd
    _writecmd->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                               _init
                           _lcd_init
                          _writechar
                           _writecmd
 ---------------------------------------------------------------------------------
 (1) _writechar                                            1     1      0      45
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      45
                           _writecmd
 ---------------------------------------------------------------------------------
 (1) _writecmd                                             1     1      0      45
                                              2 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _lcd_init
     _writecmd
       _delay
   _writechar
     _delay
   _writecmd
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Oct 25 16:36:37 2019

                     l40 07FB                       u15 07AC                      l641 079D  
                    _RA1 0029                      _RA2 002A                      _RA3 002B  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _main 07AF  
                   _init 0765                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_init 0070            __CFG_WDTE$OFF 0000  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
          __CFG_PWRTE$ON 0000                    _delay 079B           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC             __end_of_init 076C                   ??_main 0073  
                 ??_init 0070                   ?_delay 0070                   _ADCON1 009F  
       __end_of_lcd_init 079B                   delay@i 0070         __end_of_writecmd 077B  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 07AF  
                ??_delay 0070               __pmaintext 07AF                ?_lcd_init 0070  
     __size_of_writechar 000F                  __ptext1 077B                  __ptext2 078A  
                __ptext3 076C                  __ptext4 079B                  __ptext5 0765  
              ?_writecmd 0070               ??_lcd_init 0073     end_of_initialization 07FC  
             ??_writecmd 0072        __end_of_writechar 078A      start_initialization 07FC  
              ___latbits 0002        __size_of_lcd_init 0011        __size_of_writecmd 000F  
         __size_of_delay 0014                _writechar 077B               ?_writechar 0070  
               _lcd_init 078A            __size_of_main 004D            __size_of_init 0007  
             writechar@x 0072                 _writecmd 076C                writecmd@x 0072  
            ??_writechar 0072  
